{"version":3,"sources":["components/Modal/Modal.js","components/SignIn/SignIn.js","routes/login/Login.js","components/SignUp/SignUp.js","routes/register/Register.js","routes/auth/PrivateRoute.js","components/NavDrawer/NavDrawer.js","components/MyRequests/MyRequests.js","components/BookingForm/BookingForm.js","routes/new-request/NewRequestRoute.js","routes/personal/PersonalRoute.js","routes/partner/PartnerRoute.js","components/Dashboard/Dashboard.js","routes/dashboard/DashboardRoute.js","App.js","serviceWorker.js","index.js"],"names":["Modal","className","Copyright","Typography","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","onChangeUsername","onChangePassword","onBlurUsername","onBlurPassword","uNError","pWError","uNHelpText","pWHelpText","handleSignIn","isLoading","classes","Container","component","maxWidth","CssBaseline","Avatar","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onBlur","onChange","e","target","value","helperText","error","type","FormControlLabel","control","Checkbox","Button","onClick","disabled","Grid","container","justify","item","to","Box","mt","LoginRoute","useState","loading","setLoading","history","useHistory","username","setUsername","password","setPassword","usernameError","setUsernameError","passwordError","setPasswordError","usernameHelpText","setUsernameHelpText","passwordHelpText","setPasswordHelpText","handleUsername","handlePassword","handleUsernameBlur","handlePasswordBlur","fetchLogin","a","user","fetch","method","headers","body","JSON","stringify","response","ok","console","log","status","Error","text","then","data","localStorage","setItem","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse","parseJwt","catch","isAuthorized","getItem","Fragment","render","location","pathname","state","from","SignUp","userTypes","onChangeConfirmPw","onChangeUserType","onBlurConfirmPw","userError","passWError","confirmPwError","userHelpText","confirmPwHelpText","handleSignUp","onFocusPw","xs","sm","trim","SelectProps","native","select","option","key","onFocus","RegisterRoute","REGISTER_URL","setUserError","setPassWError","setConfirmPwError","usernameExists","setUsernameExists","userType","setUserType","confirmPw","setConfirmPw","errorMsgs","useCallback","fetchUsername","setUserHelpText","setConfirmPwHelpText","length","URL","fetchRegister","account","toLowerCase","json","alert","push","PrivateRoute","children","rest","NavDrawer","badgeCount","navPersonalHome","navPersonalRequests","navPersonalNew","navPartnerHome","navPartnerRequests","navPartnerAccepted","List","ListItem","button","ListItemIcon","ListItemText","primary","Badge","badgeContent","showNav","seeMore","textCenter","textAlign","wOutData","paddingTop","paddingBottom","MyRequests","days","months","Table","size","TableHead","TableRow","TableCell","TableBody","colSpan","undefined","service","accepted","appointmentDate","getMonth","getDate","getDay","getHours","appointmentLocation","root","fixedHeight","height","BookingForm","date","handleDateChange","address","handleAddressChange","handleSubmit","setError","now","getTime","minDate","maxDate","md","lg","utils","DateFnsUtils","DatePicker","disablePast","inputVariant","multiline","rowsMax","NewRequestRoute","setRequests","loader","setLoader","setDate","setAddress","setHours","chosenDate","errors","setErrors","submitRequest","newRequest","userId","padding","overflow","PersonalRoute","handleBadgeCount","fixedHeightPaper","clsx","React","upcoming","myRequests","setMyRequests","useEffect","fetchData","sort","b","createdAt","exact","path","Paper","showUpcoming","PartnerRoute","Link","href","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","Dashboard","isOpen","setIsOpen","toggleDrawer","open","event","useLocation","handleLogout","clear","stopRedirect","setStopRedirect","setBadgeCount","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Drawer","Divider","pt","DashboardRoute","App","basename","process","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fc89ec61.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function Modal() {\r\n\r\n\r\n   return (\r\n      <div className=\"modal\">\r\n         <div>\r\n            \r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Modal from '../Modal/Modal';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n        Ed Amor\r\n      {' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn({ onChangeUsername, \r\n                                onChangePassword, \r\n                                onBlurUsername, \r\n                                onBlurPassword, \r\n                                uNError, \r\n                                pWError, \r\n                                uNHelpText, \r\n                                pWHelpText, \r\n                                handleSignIn,\r\n                                isLoading\r\n                              }) {\r\n\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onBlur={() => onBlurUsername()}\r\n            onChange={(e) => onChangeUsername(e.target.value)}\r\n            helperText={uNHelpText}\r\n            error={uNError}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onBlur={() => onBlurPassword()}\r\n            onChange={(e) => onChangePassword(e.target.value)}\r\n            helperText={pWHelpText}\r\n            error={pWError}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            onClick={handleSignIn}\r\n            disabled={isLoading}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/register\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n      <Modal />\r\n      \r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Route, Redirect, useHistory } from 'react-router-dom';\r\nimport SignIn from '../../components/SignIn/SignIn';\r\n\r\n\r\nexport default function LoginRoute() {\r\n   const LOGIN_URL = \"https://young-anchorage-59812.herokuapp.com/login\";\r\n   \r\n   const [loading, setLoading] = useState(false);\r\n\r\n   const history = useHistory();\r\n\r\n   const [username, setUsername] = useState(\"\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [usernameError, setUsernameError] = useState(false);\r\n   const [passwordError, setPasswordError] = useState(false);\r\n   const [usernameHelpText, setUsernameHelpText] = useState(\"\");\r\n   const [passwordHelpText, setPasswordHelpText] = useState(\"\");\r\n\r\n   const handleUsername = (value) => setUsername(value); \r\n   const handlePassword = (value) => setPassword(value);\r\n\r\n   const handleUsernameBlur = () => {\r\n      setUsernameError(false);\r\n      setUsernameHelpText(\"\");\r\n   }\r\n\r\n   const handlePasswordBlur = () => {\r\n      setPasswordError(false);\r\n      setPasswordHelpText(\"\");\r\n   }\r\n   \r\n\r\n   function parseJwt(token) {\r\n      var base64Url = token.split(\".\")[1];\r\n      var base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n      var jsonPayload = decodeURIComponent(\r\n         atob(base64)\r\n            .split(\"\")\r\n            .map(function (c) {\r\n               return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\r\n            })\r\n            .join(\"\")\r\n      );\r\n      return JSON.parse(jsonPayload);\r\n   };\r\n\r\n   const fetchLogin = async () => {\r\n      let user = {username: username, password: password};\r\n      let response = await fetch(LOGIN_URL, {\r\n         method: 'post',\r\n         headers: {'Content-type': 'application/json'},\r\n         body: JSON.stringify(user)\r\n      })\r\n      if (!response.ok) {\r\n         setLoading(false);\r\n         console.log(\"response status: \" + response.status);\r\n         throw new Error(`HTTP error! status: ${response.status}`);\r\n      } else  {\r\n         setLoading(false)\r\n         return await response.text()\r\n      }\r\n   }\r\n\r\n   \r\n\r\n   const handleSignIn = (e) => {\r\n      setLoading(true);\r\n      fetchLogin().then((data) => {\r\n         if (data === \"Username is invalid\") {\r\n            setUsernameHelpText(data);\r\n            setUsernameError(true);\r\n         }\r\n         if (data === \"Password is incorrect\") {\r\n            setPasswordHelpText(data);\r\n            setPasswordError(true);\r\n         }\r\n         else {\r\n            localStorage.setItem(\"token\", data);\r\n            localStorage.setItem(\"user\", JSON.stringify(parseJwt(data)));\r\n            setUsernameHelpText(\"\");\r\n            setUsernameError(false);\r\n            setPasswordHelpText(\"\");\r\n            setPasswordError(false);\r\n            history.replace(\"/\");\r\n         }\r\n      }).catch(e => console.log(\"error \" + e))\r\n   }\r\n\r\n   let isAuthorized = localStorage.getItem(\"token\") ? true : false;\r\n\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <Route\r\n            render={({ location }) =>\r\n               (!isAuthorized) ? (\r\n                  <SignIn\r\n                     onChangeUsername={handleUsername}\r\n                     onChangePassword={handlePassword}\r\n                     onBlurUsername={handleUsernameBlur}\r\n                     onBlurPassword={handlePasswordBlur}\r\n                     uNError={usernameError}\r\n                     pWError={passwordError}\r\n                     uNHelpText={usernameHelpText}\r\n                     pWHelpText={passwordHelpText}\r\n                     handleSignIn={handleSignIn}\r\n                     isLoading={loading}\r\n                  />\r\n               ) : (\r\n                     <Redirect\r\n                        to={{\r\n                           pathname: \"/\",\r\n                           state: { from: location }\r\n                        }}\r\n                     />\r\n                  )\r\n            }\r\n         />\r\n         \r\n      </React.Fragment>\r\n   )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n        Ed Amor\r\n      {' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n//------------template-styles-end----------//\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function SignUp({ \r\n  userTypes, \r\n  onChangeUsername,\r\n  onChangePassword,\r\n  onChangeConfirmPw,\r\n  onChangeUserType,\r\n  onBlurUsername,\r\n  onBlurPassword,\r\n  onBlurConfirmPw,\r\n  userError,\r\n  passWError,\r\n  confirmPwError,\r\n  userHelpText,\r\n  passwordHelpText,\r\n  confirmPwHelpText,\r\n  handleSignUp,\r\n  onFocusPw\r\n  }) {\r\n  const classes = useStyles();\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"uname\"\r\n                name=\"username\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                autoFocus\r\n                error={userError}\r\n                onBlur={() => onBlurUsername()}\r\n                onChange={(e) => onChangeUsername(e.target.value.trim())}\r\n                helperText={userHelpText}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"userType\"\r\n                label=\"Account Type\"\r\n                autoComplete=\"userType\"\r\n                onChange={(e) => onChangeUserType(e.target.value)}\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n                select\r\n              >\r\n                {userTypes.map((option) => (\r\n                  <option key={option.id} value={option.label} >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                error={passWError}\r\n                onBlur={() => onBlurPassword()}\r\n                onChange={(e) => onChangePassword(e.target.value.trim())}\r\n                helperText={passwordHelpText}\r\n                onFocus={() => onFocusPw()}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"confirm-password\"\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"confirm-password\"\r\n                autoComplete=\"current-password\"\r\n                error={confirmPwError}\r\n                onBlur={() => onBlurConfirmPw()}\r\n                onChange={(e) => onChangeConfirmPw(e.target.value.trim())}\r\n                helperText={confirmPwHelpText}\r\n                onFocus={() => onFocusPw()}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"button\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            className={classes.submit}\r\n            onClick={handleSignUp}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport SignUp from '../../components/SignUp/SignUp';\r\n\r\n\r\nexport default function RegisterRoute() { \r\n   const REGISTER_URL = \"https://young-anchorage-59812.herokuapp.com/register/\";\r\n   \r\n   const history = useHistory();\r\n\r\n   const userTypes = [\r\n      { id: 1, label: \"Personal\" },\r\n      { id: 2, label: \"Partner\" }\r\n   ];\r\n\r\n   const [userError, setUserError] = useState(false);\r\n   const [passWError, setPassWError] = useState(false);\r\n   const [confirmPwError, setConfirmPwError] = useState(false);\r\n   const [usernameExists, setUsernameExists] = useState(false);\r\n\r\n   const [username, setUsername] = useState(\"\");\r\n   const [userType, setUserType] = useState(\"Personal\");\r\n   const [password, setPassword] = useState(\"\");\r\n   const [confirmPw, setConfirmPw] = useState(\"\");\r\n\r\n   const errorMsgs = [\r\n      \"Username be at least 4 characters\",\r\n      \"Field cannot be left blank\",\r\n      \"Password must be at least 8 characters\",\r\n      \"Passwords don't match\",\r\n      \"Username is already taken\"\r\n   ];\r\n   \r\n   const onChangeUsername = useCallback((e) => { \r\n      setUsername(e);\r\n      fetchUsername(e);\r\n   }, []);\r\n   const onChangeUserType = useCallback((e) => { setUserType(e) }, []);\r\n   const onChangePassword = useCallback((e) => { setPassword(e) }, []);\r\n   const onChangeConfirmPw = useCallback((e) => { setConfirmPw(e) }, []);\r\n\r\n   const [userHelpText, setUserHelpText] = useState(\"\");\r\n   const [passwordHelpText, setPasswordHelpText] = useState(\"\");\r\n   const [confirmPwHelpText, setConfirmPwHelpText] = useState(\"\");\r\n\r\n   const onBlurUsername = useCallback(() => {\r\n      if (username === \"\") {\r\n         setUserError(true);\r\n         setUserHelpText(errorMsgs[1]);\r\n      } else if (usernameExists) {\r\n         setUserError(true);\r\n         setUserHelpText(errorMsgs[4]);\r\n      } else if (username.length < 4) {\r\n         setUserError(true);\r\n         setUserHelpText(errorMsgs[0]);\r\n      }  else {\r\n         setUserError(false);\r\n         setUserHelpText(\"\");\r\n      }\r\n   }, [errorMsgs,username,usernameExists])\r\n\r\n   const onBlurPassword = useCallback(() => {\r\n      if (password === \"\") {\r\n         setPassWError(true);\r\n         setPasswordHelpText(errorMsgs[1]);\r\n      } else if (password.length < 8) {\r\n         setPassWError(true);\r\n         setPasswordHelpText(errorMsgs[2]);\r\n      } else if (confirmPw !== \"\" && password !== confirmPw) {\r\n         setPassWError(true);\r\n         setConfirmPwError(true);\r\n         setPasswordHelpText(errorMsgs[3]);\r\n         setConfirmPwHelpText(errorMsgs[3]);\r\n      } else {\r\n         setPassWError(false);\r\n         setConfirmPwError(false);\r\n         setPasswordHelpText(\"\");\r\n      }\r\n   }, [errorMsgs, password, confirmPw])\r\n\r\n   const onBlurConfirmPw = useCallback(() => {\r\n      if (confirmPw !== password) {\r\n         setConfirmPwError(true);\r\n         setPassWError(true);\r\n         setConfirmPwHelpText(errorMsgs[3]);\r\n         setPasswordHelpText(errorMsgs[3]);\r\n      } else if (confirmPw === \"\") {\r\n         setConfirmPwError(true);\r\n         setConfirmPwHelpText(errorMsgs[1]);\r\n      } else {\r\n         setConfirmPwError(false);\r\n         setPassWError(false);\r\n         setConfirmPwHelpText(\"\");\r\n      }\r\n   }, [errorMsgs, confirmPw, password])\r\n\r\n   const onFocusPw = () => {\r\n      if (passWError && confirmPwError) {\r\n         setPasswordHelpText(\"\");\r\n         setConfirmPwHelpText(\"\");\r\n      }\r\n   };\r\n\r\n   async function fetchUsername(e) {\r\n      let URL = REGISTER_URL + e;\r\n      let response = await fetch(URL);\r\n      let data = await response.text();\r\n\r\n      if (data === \"true\") {\r\n         setUsernameExists(true)\r\n      }\r\n      if (data === \"false\") {\r\n         setUsernameExists(false)\r\n      }\r\n   }\r\n\r\n   const fetchRegister = async () => {\r\n      let user = { username: username, password: password };\r\n      let account = userType.toLowerCase();\r\n      let URL = REGISTER_URL + account;\r\n      let response = await fetch(URL, {\r\n         method: 'post',\r\n         headers: { 'Content-type': 'application/json' },\r\n         body: JSON.stringify(user)\r\n      });\r\n      if (!response.ok) {\r\n         throw new Error(`HTTP error! status: ${response.status}`);\r\n      } else return await response.json()\r\n   }\r\n\r\n   const handleSignUp = () => {\r\n      if (username === \"\" || password === \"\" || confirmPw === \"\") {\r\n         onBlurUsername();\r\n         onBlurPassword();\r\n         onBlurConfirmPw();\r\n      } \r\n      if (userHelpText !== \"\" || passwordHelpText !== \"\" || confirmPwHelpText !== \"\") {\r\n         onBlurUsername();\r\n         onBlurPassword();\r\n         onBlurConfirmPw();\r\n      }\r\n      if (userError || passWError || confirmPwError) {\r\n         onBlurUsername();\r\n         onBlurPassword();\r\n         onBlurConfirmPw();\r\n      }\r\n      if (userHelpText === \"\" && passwordHelpText === \"\" && confirmPwHelpText === \"\" \r\n         && username !== \"\" && password !== \"\" && confirmPw !== \"\") {\r\n         if (password === confirmPw && !usernameExists) {\r\n            fetchRegister()\r\n               .then(data => {\r\n                  console.log(data)\r\n                     alert(\"Success\");\r\n                     history.push(\"/\");\r\n               })\r\n               .catch(e => console.log(e))\r\n            }   \r\n         } else alert(\"Registration failed\")\r\n   }\r\n\r\n\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <SignUp \r\n            userTypes={userTypes}\r\n            onChangeUsername={onChangeUsername}\r\n            onChangePassword={onChangePassword}\r\n            onChangeConfirmPw={onChangeConfirmPw}\r\n            onChangeUserType={onChangeUserType}\r\n            onBlurUsername={onBlurUsername}\r\n            onBlurPassword={onBlurPassword}\r\n            onBlurConfirmPw={onBlurConfirmPw}\r\n            userError={userError}\r\n            passWError={passWError}\r\n            confirmPwError={confirmPwError}\r\n            userHelpText={userHelpText}\r\n            passwordHelpText={passwordHelpText}\r\n            confirmPwHelpText={confirmPwHelpText}\r\n            handleSignUp={handleSignUp}\r\n            onFocusPw={onFocusPw}\r\n         />\r\n      </React.Fragment>\r\n   )\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport default function PrivateRoute({ children, ...rest }) {\r\n   let isAuthorized = localStorage.getItem(\"token\") ? true : false;\r\n\r\n\r\n   \r\n   return (\r\n      <React.Fragment>\r\n         <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n               (isAuthorized) ? (\r\n                  children\r\n               ) : (\r\n                     <Redirect\r\n                        to={{\r\n                           pathname: \"/login\",\r\n                           state: { from: location }\r\n                        }}\r\n                     />\r\n                  )\r\n            }\r\n         />\r\n      </React.Fragment>\r\n   )\r\n}","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ListIcon from '@material-ui/icons/List';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\n// import NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\n\r\nexport default function NavDrawer({account, badgeCount}) {\r\n   const history = useHistory();\r\n\r\n   \r\n\r\n   const navPersonalHome = () => {\r\n      history.push('/personal/')\r\n   };\r\n   const navPersonalRequests = () => {\r\n      history.push('/personal/requests')\r\n   };\r\n   const navPersonalNew = () => {\r\n      history.push('/personal/new')\r\n   };\r\n   const navPersonalTest = () => {\r\n      history.push('/personal/test')\r\n   };\r\n\r\n   const navPartnerHome = () => {\r\n      history.push('/partner/')\r\n   }\r\n   const navPartnerRequests = () => {\r\n      history.push('/partner/requests')\r\n   }\r\n   const navPartnerAccepted = () => {\r\n      history.push('/partner/accepted')\r\n   }\r\n\r\n\r\n\r\n   const showNav = () => {\r\n      let a = account.toLowerCase();\r\n      if (a === \"personal\") {\r\n         return (\r\n            <React.Fragment>\r\n               <ListItem button onClick={navPersonalHome}>\r\n                  <ListItemIcon>\r\n                     <DashboardIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Dashboard\" />\r\n               </ListItem>\r\n               <ListItem button onClick={navPersonalRequests}>\r\n                  <ListItemIcon>\r\n                     <Badge color=\"secondary\" badgeContent={badgeCount} >\r\n                        <ListIcon />\r\n                     </Badge>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"My Bookings\" />\r\n               </ListItem>\r\n               <ListItem button onClick={navPersonalNew}>\r\n                  <ListItemIcon>\r\n                     <NoteAddIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Book a Cleaner\" />\r\n               </ListItem>\r\n            </React.Fragment>\r\n         )\r\n      } \r\n      if (a === \"partner\") {\r\n         return (\r\n            <React.Fragment>\r\n               <ListItem button onClick={navPartnerHome}>\r\n                  <ListItemIcon>\r\n                     <DashboardIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Dashboard\" />\r\n               </ListItem>\r\n               <ListItem button onClick={navPartnerRequests}>\r\n                  <ListItemIcon>\r\n                     <Badge color=\"secondary\" badgeContent={badgeCount} >\r\n                        <AllInboxIcon />\r\n                     </Badge>\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Available Requests\" />\r\n               </ListItem>\r\n               <ListItem button onClick={navPartnerAccepted}>\r\n                  <ListItemIcon>\r\n                     <AssignmentIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Accepted Requests\" />\r\n               </ListItem>\r\n            </React.Fragment>\r\n         )\r\n      } \r\n   }\r\n\r\n   return (\r\n      <List>\r\n         {showNav()}\r\n      </List>\r\n   )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   seeMore: {\r\n      marginTop: theme.spacing(3),\r\n   },\r\n   textCenter: {\r\n      textAlign: 'center'\r\n   },\r\n   wOutData: {\r\n      paddingTop: theme.spacing(3),\r\n      paddingBottom: theme.spacing(3),\r\n   }\r\n}));\r\n\r\nexport default function MyRequests({ data }) {\r\n   const classes = useStyles();\r\n   const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n   const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n   let showRecent = () => {\r\n      if (data[0].id === 1) {\r\n         return (\r\n            <TableRow key={data[0].id}>\r\n               <TableCell align=\"center\" colSpan={4} className={classes.wOutData}>\r\n                  You haven't made a request yet. <Link to=\"/personal/new\">Click here to make your first request.</Link>\r\n               </TableCell>\r\n            </TableRow>\r\n         )\r\n      }\r\n      if (data !== undefined) {\r\n         return data.map((item) => {\r\n            return (\r\n               <TableRow key={item.id}>\r\n                  {/* <TableCell>\r\n                     {\r\n                        `\r\n                           ${months[new Date(item.createdAt).getMonth()]} ${new Date(item.createdAt).getDate()}\r\n                        `\r\n                     }\r\n                  </TableCell> */}\r\n                  <TableCell>{item.service}</TableCell>\r\n                  <TableCell className={classes.textCenter}>{item.accepted ? \"Booked\" : \"Pending\"}</TableCell>\r\n\r\n                  <TableCell className={classes.textCenter}>\r\n                     <div>\r\n                        {\r\n                           `${months[new Date(item.appointmentDate).getMonth()]} ${new Date(item.appointmentDate).getDate()},\r\n                           ${days[new Date(item.appointmentDate).getDay()]} ${new Date(item.appointmentDate).getHours()}:00AM\r\n                           `\r\n                        }\r\n                     </div>\r\n                     <div>\r\n                        {item.appointmentLocation}\r\n                     </div>\r\n                  </TableCell>\r\n                  {/* <TableCell className={classes.textCenter}>{item.appointmentLocation}</TableCell> */}\r\n               </TableRow>\r\n            )\r\n         })\r\n      }\r\n   }\r\n\r\n   console.log(data)\r\n\r\n\r\n   return (\r\n      <React.Fragment>\r\n         <Grid container spacing={2} justify=\"center\">\r\n            <Typography component=\"h1\" variant=\"h4\" >\r\n               Requests\r\n            </Typography>\r\n         </Grid>\r\n         <Table size=\"small\" className={classes.seeMore} >\r\n            <TableHead>\r\n               <TableRow>\r\n                  {/* <TableCell>Placed On</TableCell> */}\r\n                  <TableCell>Service</TableCell>\r\n                  <TableCell className={classes.textCenter}>Status</TableCell>\r\n                  <TableCell className={classes.textCenter}>Date & Location</TableCell>\r\n                  {/* <TableCell className={classes.textCenter}>Location</TableCell> */}\r\n               </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n               {showRecent()}\r\n            </TableBody>\r\n         </Table>\r\n      </React.Fragment>\r\n   );\r\n}\r\n","import React from 'react';\r\n// import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n// import clsx from 'clsx';\r\nimport { MuiPickersUtilsProvider, DatePicker\r\n } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      '& .MuiTextField-root': {\r\n         margin: theme.spacing(1),\r\n         width: '25ch',\r\n      },\r\n   },\r\n   fixedHeight: {\r\n      height: 240,\r\n   },\r\n   form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n      // [theme.breakpoints.down('sm')]: {\r\n      //    width: '100%',\r\n      // },\r\n      // [theme.breakpoints.up('md')]: {\r\n      //    width: '100%',\r\n      // },\r\n      // [theme.breakpoints.up('lg')]: {\r\n      //    width: '80%',\r\n      // },\r\n   },\r\n   submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n   },\r\n   paper: {\r\n      marginTop: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n   },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function BookingForm({ service, date, handleDateChange, address, handleAddressChange, handleSubmit, error, setError}) {\r\n   const classes = useStyles();\r\n   // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n   let now = new Date().getTime();\r\n   let minDate = new Date(now + 86400000);\r\n   let maxDate = new Date(now + 1209600000);\r\n   // console.log(minDate)\r\n\r\n\r\n   return (\r\n      <div className={classes.paper}>\r\n         <Typography component=\"h1\" variant=\"h4\">\r\n            Find a Backup\r\n         </Typography>\r\n         <p>\r\n            Pending requests expire on the day before your chosen date at 11:59PM.\r\n         </p>\r\n         <form className={classes.form} noValidate>\r\n            <Grid container spacing={2} justify=\"center\">\r\n               <Grid item sm={12} md={10} lg={8}>\r\n                  <TextField\r\n                     fullWidth\r\n                     id=\"service-id\"\r\n                     select\r\n                     label=\"Service\"\r\n                     value={service[0]}\r\n                     // defaultValue={service[0].value}\r\n                     onChange={(e) => console.log(e.target.value)}\r\n                     helperText=\"Please select a service\"\r\n                     variant=\"outlined\"\r\n                     SelectProps={{\r\n                        native: true,\r\n                     }}\r\n                  >\r\n                     {service.map((option) => (\r\n                        <option key={option} value={option}>\r\n                           {option}\r\n                        </option>\r\n                     ))}\r\n                  </TextField>\r\n               </Grid>\r\n               <Grid item sm={12} md={10} lg={8}>\r\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                     <DatePicker \r\n                        fullWidth\r\n                        disablePast={true}\r\n                        inputVariant=\"outlined\"\r\n                        helperText=\"All requests wll be scheduled at 9:00AM of your chosen date\"\r\n                        id=\"date-picker\"\r\n                        label=\"Date\"\r\n                        // dateRangeIcon={DateRangeIcon}\r\n                        minDate={minDate}\r\n                        maxDate={maxDate}\r\n                        value={date}\r\n                        onChange={handleDateChange}  \r\n                     />\r\n                  </MuiPickersUtilsProvider>\r\n               </Grid>\r\n               <Grid item sm={12} md={10} lg={8}>\r\n                  <TextField\r\n                     fullWidth\r\n                     id=\"outlined-multiline-flexible\"\r\n                     helperText=\"Please provide the location for your request\"\r\n                     label=\"Address\"\r\n                     multiline\r\n                     rowsMax={4}\r\n                     value={address}\r\n                     onChange={(e) => handleAddressChange(e.target.value)}\r\n                     variant=\"outlined\"\r\n                     error={error.address}\r\n                     onFocus={() => setError({...error, address: false})}\r\n                  />\r\n               </Grid>\r\n               <Grid item sm={12} md={10} lg={8}>\r\n                  <Button\r\n                     type=\"button\"\r\n                     fullWidth\r\n                     variant=\"contained\"\r\n                     className={classes.submit}\r\n                     onClick={() => handleSubmit()}\r\n                  >\r\n                     Submit\r\n                  </Button>\r\n                  \r\n               </Grid>\r\n            </Grid>\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Route, useHistory } from 'react-router-dom';\r\nimport BookingForm from '../../components/BookingForm/BookingForm';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\n\r\n\r\nexport default function NewRequestRoute({setRequests}) {\r\n   const token = localStorage.getItem('token');\r\n   const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n   const history = useHistory();\r\n\r\n   let [loader, setLoader] = useState(false);\r\n\r\n   const service = ['Basic Housekeeping'];\r\n   const [date, setDate] = useState(new Date().getTime() + 86400000);\r\n   const [address, setAddress] = useState(\"\");\r\n   \r\n   const handleDateChange = useCallback((e) => {\r\n      e.setHours(0, 0, 0, 0);\r\n      let chosenDate = new Date(e).getTime() + 32400000;\r\n      console.log(e);\r\n      console.log(new Date(chosenDate));\r\n\r\n      setDate(new Date(chosenDate).getTime())\r\n   },[]) \r\n\r\n   const handleAddressChange = useCallback((e) => {\r\n      setAddress(e)\r\n   },[]) \r\n\r\n\r\n   let [errors, setErrors] = useState({\r\n      service: false,\r\n      date: false,\r\n      address: false\r\n   })\r\n\r\n\r\n   const submitRequest = async () => {\r\n      setLoader(true);\r\n      if (service === \"\" || date === \"\" || address === \"\" || typeof date !== 'number' || typeof address !== 'string') {\r\n         if (address === \"\") {\r\n            setErrors({...errors, address: true})\r\n         }\r\n         setLoader(false);\r\n         return;\r\n      }\r\n      let newRequest = {service: service[0], appointmentDate: date, appointmentLocation: address};\r\n      const URL = `https://young-anchorage-59812.herokuapp.com/auth/users/${user.userId}`;\r\n      let response;\r\n\r\n      try {\r\n         response = await fetch(URL, {\r\n            method: 'post',\r\n            headers: {\r\n               'Content-type': 'application/json',\r\n               'x-auth-token': token\r\n            },\r\n            body: JSON.stringify(newRequest)\r\n         })\r\n      } catch(e) {\r\n         console.log(e);\r\n         alert('Please check your internet connection');\r\n         setLoader(false);\r\n      }\r\n\r\n      if (response !== undefined) {\r\n         if (response.ok) {\r\n            let data = await response.json();\r\n            setRequests(data);\r\n            setLoader(false);\r\n            history.push('/personal/requests')\r\n         } else {\r\n            alert(`HTTP Error: ${response.status}`);\r\n            setLoader(false);\r\n         } \r\n      }\r\n   }\r\n\r\n\r\n   return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n         <Route render={() => {\r\n            if (!loader) {\r\n               return (\r\n                  <BookingForm \r\n                     service={service}\r\n                     date={date}\r\n                     handleDateChange={handleDateChange}\r\n                     address={address}\r\n                     handleAddressChange={handleAddressChange}\r\n                     handleSubmit={submitRequest}\r\n                     error={errors}\r\n                     setError={setErrors}\r\n                  />\r\n               )\r\n            } else return <div className=\"page-loader\" ></div>\r\n         }}/>\r\n      </MuiPickersUtilsProvider>\r\n   )\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MyRequests from '../../components/MyRequests/MyRequests';\r\nimport NewRequestRoute from '../new-request/NewRequestRoute';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n   },\r\n   fixedHeight: {\r\n      // paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n   },\r\n}));\r\n\r\n\r\nexport default function PersonalRoute({handleBadgeCount}) {\r\n   const classes = useStyles();\r\n   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n   const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n   const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n\r\n   \r\n   const [myRequests, setMyRequests] = React.useState([{id: 1, upcoming: \"none\"}]);\r\n   \r\n   \r\n   \r\n   React.useEffect(() => {\r\n      const token = localStorage.getItem('token');\r\n      const user = JSON.parse(localStorage.getItem('user'));\r\n      const fetchData = async () => {\r\n         let URL = `https://young-anchorage-59812.herokuapp.com/auth/users/${user.userId}/appointments`;\r\n         let response;\r\n\r\n         try {\r\n            response = await fetch(URL, {\r\n               method: 'get',\r\n               headers: {\r\n                  'x-auth-token': token\r\n               }\r\n            })\r\n         } catch (e) {\r\n            console.log(e);\r\n            alert('Please check your internet connection');\r\n         }\r\n\r\n         if (response !== undefined) {\r\n            if (!response.ok) {\r\n               console.log(\"response status: \" + response.status);\r\n               throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n            let data = await response.json();\r\n            if (data.length > 0) {\r\n               handleBadgeCount(data.length);\r\n               setMyRequests(data);\r\n            } \r\n         }\r\n      }\r\n      fetchData();\r\n   }, [handleBadgeCount]);\r\n\r\n   const setRequests = (newRequest) => {\r\n      if (myRequests[0].id === 1) {\r\n         setMyRequests(newRequest)\r\n      } else {\r\n         setMyRequests([newRequest, ...myRequests]);\r\n         handleBadgeCount(myRequests.length + 1)\r\n      } \r\n   };\r\n\r\n   myRequests.sort((a, b) => (b.createdAt - a.createdAt));\r\n\r\n\r\n   \r\n   \r\n   let showUpcoming = () => {\r\n      let upcoming = myRequests[myRequests.length - 1];\r\n      if (upcoming.id === 1) {\r\n         return (\r\n            <div><p>No Upcoming Booking</p></div>\r\n         )\r\n      } else return (\r\n         <div>\r\n            <p>{upcoming.service}</p>\r\n            <p>\r\n               {\r\n                  `\r\n                  ${months[new Date(upcoming.appointmentDate).getMonth()]} ${new Date(upcoming.appointmentDate).getDate()},\r\n                   ${days[new Date(upcoming.appointmentDate).getDay()]} ${new Date(upcoming.appointmentDate).getHours()}:00AM\r\n                  `\r\n               }\r\n            </p>\r\n            <p>{upcoming.appointmentLocation}</p>\r\n         </div>\r\n      ) \r\n   }\r\n\r\n   return (\r\n      <Switch>\r\n         <Route exact path=\"/personal/\" render={() => (\r\n            <Grid container spacing={2}>\r\n               <Grid item xs={12}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                     <div>\r\n                        <h1>\r\n                           My Dashboard\r\n                        </h1>\r\n                        <p>\r\n                           Welcome to BackApp! We provide a platform that aims to connect \r\n                           people seeking a backup and people willing to be the backup.\r\n                        </p>\r\n                        <p>\r\n                           Today, it's so easy to get caught up in things that \r\n                           requires our time and focus. How can we juggle our responsibilities and make \r\n                           sure that the place that we call home is clean and well maintained? \r\n                           We need someone to be our backup, who will take care of our housekeeping duties \r\n                           for us, hence the name BackApp.\r\n                        </p>\r\n                     </div>\r\n                  </Paper>\r\n               </Grid>\r\n               <Grid item xs={12}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                     <div>\r\n                        <h1>\r\n                           Upcoming\r\n                        </h1>\r\n                        {showUpcoming()}\r\n                     </div>\r\n                  </Paper>\r\n               </Grid>\r\n            </Grid>\r\n         )} />\r\n         \r\n         <Route path=\"/personal/requests\" render={() => <MyRequests data={myRequests} />} />\r\n\r\n         <NewRequestRoute path=\"/personal/new\" setRequests={setRequests} />\r\n\r\n      </Switch>\r\n   )\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   paper: {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      overflow: 'auto',\r\n      flexDirection: 'column',\r\n   }\r\n}));\r\n\r\n\r\nexport default function PartnerRoute() {\r\n   const classes = useStyles();\r\n   const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n   return (\r\n      <Switch>\r\n         <Route exact path=\"/partner/\" render={() => (\r\n            <Grid container spacing={3}>\r\n               {/* Chart */}\r\n               <Grid item xs={12} md={8} lg={9}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                     <div>\r\n                        <h1>\r\n                           Partner Account!\r\n                      </h1>\r\n                     </div>\r\n                  </Paper>\r\n               </Grid>\r\n               {/* Recent Deposits */}\r\n               <Grid item xs={12} md={4} lg={3}>\r\n                  <Paper className={fixedHeightPaper}>\r\n                     <div>\r\n                        <h1>\r\n                           Hello!\r\n                      </h1>\r\n                     </div>\r\n                  </Paper>\r\n               </Grid>\r\n               {/* Recent Orders */}\r\n               <Grid item xs={12}>\r\n                  <Paper className={classes.paper}>\r\n                     <div>\r\n                        <h1>\r\n                           Hello!\r\n                      </h1>\r\n                     </div>\r\n                  </Paper>\r\n               </Grid>\r\n            </Grid>\r\n         )} />\r\n\r\n         <Route path=\"/partner/requests\" render={() => (\r\n            <div>\r\n               <h1>\r\n                  Available Requests\r\n               </h1>\r\n            </div>\r\n         )} />\r\n\r\n         <Route path=\"/partner/accepted\" render={() => (\r\n            <div>\r\n               <h1>\r\n                  Accepted Requests\r\n               </h1>\r\n            </div>\r\n         )} />\r\n      </Switch>\r\n   )\r\n}","import React from 'react';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\r\nimport NavDrawer from '../NavDrawer/NavDrawer';\r\nimport PersonalRoute from '../../routes/personal/PersonalRoute';\r\nimport PartnerRoute from '../../routes/partner/PartnerRoute';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Ed Amor\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'absolute',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    // marginLeft: theme.spacing(7),\r\n    // [theme.breakpoints.up('sm')]: {\r\n    //   marginLeft: theme.spacing(9),\r\n    // },\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  // const handleDrawerOpen = () => {\r\n  //   setOpen(true);\r\n  // };\r\n  // const handleDrawerClose = () => {\r\n  //   setOpen(false);\r\n  // };\r\n\r\n  const toggleDrawer = (open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setIsOpen(open);\r\n  };\r\n\r\n  // -------end-of-template------\r\n  const { pathname } = useLocation();\r\n  const history = useHistory();\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    history.replace('/');\r\n  };\r\n\r\n\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  let [stopRedirect, setStopRedirect] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    let a = user.account.toLowerCase();\r\n    if (!stopRedirect) {\r\n      if (a === \"personal\") history.push(\"/personal/\");\r\n      if (a === \"partner\") history.push(\"/partner/\");\r\n      setStopRedirect(true)\r\n    }\r\n  }, [history, stopRedirect, user.account])\r\n\r\n\r\n  let [badgeCount, setBadgeCount] = React.useState(0);\r\n  const handleBadgeCount = React.useCallback((e) => {\r\n    setBadgeCount(e)\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, isOpen && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleDrawer(true)}\r\n            className={clsx(\r\n              classes.menuButton,\r\n              isOpen && classes.menuButtonHidden,\r\n            )}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.title}\r\n          >\r\n            {\r\n              pathname === '/personal/requests' ? 'Requests'\r\n              : pathname === '/personal/new' ? 'New Request'\r\n              : 'Dashboard'\r\n            }\r\n          </Typography>\r\n          <IconButton color=\"inherit\" onClick={handleLogout}>\r\n            <LogoutIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* Sidebar Nav */}\r\n\r\n      <Drawer\r\n        variant=\"temporary\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !isOpen && classes.drawerPaperClose),\r\n        }}\r\n        open={isOpen}\r\n        onClick={toggleDrawer(false)}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={toggleDrawer(false)}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n          <NavDrawer account={user.account} badgeCount={badgeCount} />\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={handleLogout}>\r\n            <ListItemIcon>\r\n              <LogoutIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n\r\n      {/* End Sidebar Nav */}\r\n\r\n      {/* Main Content */}\r\n\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => (<div className=\"page-loader\"></div>)} />\r\n            <Route path=\"/personal/\" render={() => <PersonalRoute handleBadgeCount={handleBadgeCount} />} />\r\n            <Route path=\"/partner/\" render={() => <PartnerRoute handleBadgeCount={handleBadgeCount} />} />      \r\n          </Switch>\r\n          \r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n\r\n      {/* Main Content */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Dashboard from '../../components/Dashboard/Dashboard';\r\n\r\n\r\nexport default function DashboardRoute() {\r\n\r\n   return (\r\n      <Route path=\"/\" >\r\n         <Dashboard />\r\n      </Route>\r\n   )\r\n}","import React from 'react';\nimport { \n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport LoginRoute from './routes/login/Login';\nimport RegisterRoute from './routes/register/Register';\nimport PrivateRoute from './routes/auth/PrivateRoute';\nimport DashboardRoute from './routes/dashboard/DashboardRoute';\n\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL} >\n      <Switch>\n        <Route path='/login' children={<LoginRoute />} />\n        <Route path='/register' children={<RegisterRoute />} />\n        <PrivateRoute path=\"/\" >\n          <DashboardRoute />\n        </PrivateRoute>\n      </Switch>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}